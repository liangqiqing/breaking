 ## 今日内容
     1.多表查询
	* select 
	       类型字段
		from
		    表名称
          * 笛卡尔积：
	* 有两个集合A,B， 取这两个集合的所有组成情况。
	* 要完成多表查询，需要消除冗余无用的数据。
          * 多表查询的分类：
	* 内连接查询：
	       1.隐式内连接：使用where条件消除无用数据
	       2.显式内连接：select  字段列表 from 表1 inner join 表名 on 条件
	       3.内连接查询：
		1.从哪些表查询数据
		2.条件是什么
		3.查询那些字段
	* 外连接查询：
	     1.左外连接：
		* 语法： select 字段列表 from 表1 left {outer} join 表2 on条件 ;
		* 查询的是左边所有数据以及其交集部分。
	     2.右外连接：
		* 语法： select 字段列表 from 表1 right {outer} join 表2 on条件 ;
		* 查询的是右边所有数据以及其交集部分。
	* 子查询不同情况：
	     1.子查询的结果是单行单列的：
		* 子查询可以作为条件，使用运算符去判断。
	     2.子查询的结果是多行单列的：
		* 子查询(也可以理解为一个集合)可以作为条件，使用运行符in来判断
	     3.子查询的结果是多行多列的：
		* 子查询可以作为一张虚拟表，作为参数进行查询。
     2.事务的基本介绍：
	1.概念：
	    * 如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。
	2.操作：
	    1.开启事务：start transaction ;
	    2.回滚：rollback;
	    3.提交事务：commit;
	    4.MySQL数据库中的事务默认自动提交
		* 事务提交的两种方式：
		    * 自动提交：
		        * mysql就是自动提交的
		        * 一条DML(增删改)语句会自动提交一次事务。
		    * 手动提交：
		        * Oracle数据库默认是手动提交事务
		        * 需要先开启事务，再提交
		* 修改事务的默认提交方式：
		        * 查看事务的默认提交方式：select  @@autocommit ; -- 1代表自动   0  代表手动
		        * 修改默认提交方式：set  @@autocommit = 0 ； 
	  3.事务的四大特性：
	       1.原子性：是不可分隔的最小操作单位，要么同时成功，要么同时失败。
	       2.持久性：当事务提交或回滚，就会持久化的把数据保存数据库中。
	       3.隔离性：多个事务之间，相互独立。
	       4.一致性：事务操作前后，数据总量不变。
	4.事务的隔离级别(了解)：
	   * 概念：多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。
		* 存在问题：
		   1. 脏读：一个事务，读取到另一个事务没有提交的数据
		   2. 不可重复读(虚读)：同一个事务中，两次读取到数据不一样
		   3.幻读：一个事务操作(DXL)数据表中所有记录，里一个事务调价了一条数据，则第一个事务查询不到		        自己的修改。
	** 隔离级别：
	   1. read uncommitted: 读取未提交
		* 产生的问题： 脏读、不可重复读、幻读
	  2. read committed: 读已提交 （Oracle默认）
		* 产生的问题：不可重复读、幻读
	  3. repeatable read: 可重复读（MySQL默认）
		* 产出的问题：幻读
	  4. serializable : 串行化
		* 可以解决所有的问题
	  
	  * 注意：给级别从小到大安全性越高，相对效率越低
	  * 数据库查询隔离级别：
		* select  @@tx_isolation;
	  * 数据库设置隔离级别：
		* set  gilbal transaction isolation level  级别字符串；
	
   ## DCL ：
      * SQL 分类：
	1.DDL：操作数据库和表
	2.DML：增删改表中数据
	3.DQL：查询表中数据
	4.DCL：管理用户，授权
       * DBA ：数据库管理员
       * DCL ：管理用户，授权
	1.管理用户
	  1.添加用户：
	     * 语法：create user '用户名'@'主机名'  identified by  '密码';
	  2.删除用户：
	     * 语法： drop user '用户名'@'主机名' ;
	  3.修改用户密码：
	      * update  user  set password = password('新密码') where user = '用户名';
	      * set password  for ‘用户名’@‘主机名’password('新密码');
	      * mysql中忘记了root用户密码？
		1.以管理员身份打开cmd-->net stop mysql  停止mysql服务
		2.使用无验证方式启动mysql服务： mysql --skip-grant-tables
		3.打开新的cmd窗口，直接输入mysql命令，敲回车。就可以成功登陆
		4.use mysql；
		5.update use set password = password('新密码' ) where user = 'root';
		6.关闭两个窗口
		7.打开任务管理器，手动结束musql.exe的进程
		8.启动mysql服务
		9.使用新密码登陆
	  4.查询用户：
	    -- 1. 切换到mysql数据库
	 use mysql ；
	    -- 2. 查询user表
	 select * from user；
	
             *  通配符 ：％　表示可以在任意主机使用用户登录数据库
	  
            2.权限管理：
	1.查询权限：
	      show grants for '用户名'@'主机名';
	2.授予权限：
	   -- 授予权限
	     grant 权限列表 on 数据库名 . 表名  to ‘用户名’@‘主机名’；
	   --使用通配符授予全部权限
	     grant all  on  * .  *  to ‘用户名’@‘主机名’；
	3.撤销权限：
	    -- 撤销权限：
	    revoke 权限列表  on 数据库名 . 表名 from ‘用户名’@‘主机名’；